# Problem 2:
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import math

def calcFib(fib_index):
    phi = (1 + math.sqrt(5)) / 2

    fib_val = (pow(phi, fib_index) - (pow(-1 * phi, -1 * fib_index))) / ((2 * phi) - 1)

    return int(fib_val)
def main():
    fib_index = fib_val = sum = 0

    while(fib_val < 4000000):
        fib_index += 1
        fib_val = calcFib(fib_index)
        if fib_val % 2 == 0:
            sum += fib_val

    print(sum)

if __name__ == '__main__':
    main()